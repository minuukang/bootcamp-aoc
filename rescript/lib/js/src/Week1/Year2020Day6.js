// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Process = require("process");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_array = require("rescript/lib/js/caml_array.js");
var Belt_SetString = require("rescript/lib/js/belt_SetString.js");

function parseSurveyGroup(response) {
  return response.split("\n\n");
}

function parseSurveyPerson(group) {
  return group.split("\n");
}

function parseSurveyAnswers(person) {
  return Belt_SetString.fromArray(person.split(""));
}

function parseSurveyResponse(response) {
  return Belt_Array.map(response.split("\n\n"), (function (group) {
                return Belt_Array.map(group.split("\n"), parseSurveyAnswers);
              }));
}

var input = Fs.readFileSync(Process.cwd() + "/rescript/input/Week1/Year2020Day6.input.txt", "utf8");

var answerGroup = parseSurveyResponse(input);

var stepOneAnswer = Belt_Array.reduce(Belt_Array.map(answerGroup, (function (answers) {
            return Belt_SetString.size(Belt_Array.reduce(answers, undefined, Belt_SetString.union));
          })), 0, (function (res, len) {
        return res + len | 0;
      }));

var stepTwoAnswer = Belt_Array.reduce(Belt_Array.map(answerGroup, (function (answers) {
            return Belt_SetString.size(Belt_Array.reduce(answers, Caml_array.get(answers, 0), Belt_SetString.intersect));
          })), 0, (function (res, len) {
        return res + len | 0;
      }));

console.log({
      stepOneAnswer: stepOneAnswer,
      stepTwoAnswer: stepTwoAnswer
    });

exports.parseSurveyGroup = parseSurveyGroup;
exports.parseSurveyPerson = parseSurveyPerson;
exports.parseSurveyAnswers = parseSurveyAnswers;
exports.parseSurveyResponse = parseSurveyResponse;
exports.input = input;
exports.answerGroup = answerGroup;
exports.stepOneAnswer = stepOneAnswer;
exports.stepTwoAnswer = stepTwoAnswer;
/* input Not a pure module */
